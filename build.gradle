plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
}

version = '0.1'
group = 'com.modernsprinkler'

// -------------------------------------------------------------
// Mod-Metadaten
// -------------------------------------------------------------
def mod_id = 'modern_sprinkler'
def mod_name = 'Modern Sprinkler'
def mod_version = version
def mod_authors = 'CrypCee'
def mod_description = 'Irrigate the farmland or prevent them from drying out.'
def mod_license = 'GPL-3.0-only' 

// -------------------------------------------------------------
// Minecraft / Forge-Versionen
// -------------------------------------------------------------
def minecraft_version = '1.20.1'
def minecraft_version_range = "[1.20.1,1.21)"
def forge_version = '47.1.0'
def forge_version_range = "[47,)"
def loader_version_range = "[47,)"
def mapping_channel = 'official'
def mapping_version = '1.20.1'

// GeckoLib-Version
def geckolib_version = '4.7.4'

// -------------------------------------------------------------
// Ausgabename der JAR-Datei
// -------------------------------------------------------------
archivesBaseName = "ModernSprinkler-forge-${minecraft_version}"

// -------------------------------------------------------------
// Java
// -------------------------------------------------------------
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

minecraft {
    mappings channel: mapping_channel, version: mapping_version

    runs {
        client {
            workingDirectory project.file('run')
            arg '-mixin.config=' + mod_id + '.mixins.json'
            mods {
                modern_sprinkler {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            mods {
                modern_sprinkler {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'),
                 '--existing', file('src/main/resources/')
            mods {
                modern_sprinkler {
                    source sourceSets.main
                }
            }
        }
    }
}

// -------------------------------------------------------------
// Dependencies
// -------------------------------------------------------------
repositories {
    maven {
        name = "GeckoLib"
        url = "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    implementation fg.deobf("software.bernie.geckolib:geckolib-forge-${minecraft_version}:${geckolib_version}")
}

// -------------------------------------------------------------
// Ressourcen-Filter (füllt mods.toml & pack.mcmeta Platzhalter)
// -------------------------------------------------------------
tasks.named('processResources', ProcessResources).configure {
    def replaceProperties = [
        minecraft_version       : minecraft_version,
        minecraft_version_range : minecraft_version_range,
        forge_version           : forge_version,
        forge_version_range     : forge_version_range,
        loader_version_range    : loader_version_range,
        mod_id                  : mod_id,
        mod_name                : mod_name,
        mod_license             : mod_license,
        mod_version             : mod_version,
        mod_authors             : mod_authors,
        mod_description         : mod_description
    ]

    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

// -------------------------------------------------------------
// Publishing (optional, für CurseForge o.ä.)
// -------------------------------------------------------------
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}
